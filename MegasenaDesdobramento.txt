<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Desdobramento Mega-Sena</title>
    <link rel="stylesheet" href="./css/styles.css"> <!-- Corrija o caminho do CSS se necessário -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
</head>
<body>
    <div class="container">
        <h1>Desdobramento Mega-Sena</h1>
        <h3>Números disponíveis (Desdobramento para 30 dezenas)</h3>
        <div class="table-container">
            <table id="numeros">
                <tr>
                    <!-- Os números serão inseridos aqui via JavaScript -->
                </tr>
            </table>
        </div>
        <div class="instructions">
            <p><strong>INSTRUÇÕES:</strong></p>
            <ol>
                <li>Exclua exatamente <strong>10 dezenas pares</strong> e <strong>10 dezenas ímpares</strong>.</li>
                <li>Escolha <strong>uma dezena</strong> para fixar.</li>
                <li>Selecione a <strong>quantidade de jogos</strong> que deseja gerar.</li>
                <li>Escolha de 7 a 20 dezenas adicionais (<span style="color: red;">opcional</span>).</li>
                <li>Salve o jogo para abrir no Bloco de Notas ou exporte para o xcel.</li>
            </ol>
        </div>
        <div class="number-selection">
            <label for="excluir-pares">Dezenas pares a excluir:</label>
            <input type="text" id="excluir-pares" placeholder="Ex: 02, 04, 10, ...">
        </div>
        <div class="number-selection">
            <label for="excluir-impares">Dezenas ímpares a excluir:</label>
            <input type="text" id="excluir-impares" placeholder="Ex: 01, 03, 11, ...">
        </div>
        <div class="number-selection">
            <label for="fixar">Dezena a fixar:</label>
            <input type="text" id="fixar" placeholder="Ex: 07">
        </div>
        <div class="number-selection">
            <label for="jogos">Quantidade de jogos:</label>
            <input type="number" id="jogos" min="1" max="100" placeholder="Ex: 5">
        </div>
        <div class="number-selection">
            <label for="dezenas-adicionais">Dezenas adicionais (7 a 20): (<span style="color: red;">opcional</span>)</label>
            <input type="number" id="dezenas-adicionais" min="7" max="20" placeholder="Ex: 10">
        </div>
        <div class="button-container">
            <button onclick="gerarJogos()">Gerar Jogos</button>
            <button onclick="salvarJogo()">Salvar Jogo</button>
            <button onclick="resetarJogo()">Resetar Jogo</button>
            <button onclick="exportarParaExcel()">Exportar para Excel</button>
        </div>
        <div class="userInformation">
            <p>Os jogos serão gerados com no mínimo 6 dezenas. Caso não haja adição de dezenas (<span style="color: red;">opcional</span>).</p>
            <p>Os jogos gerados são checados automaticamente afim de não haver duplicidade.</p>
            <p>O limite para a geração de jogos está setada para 1000.</p>
        </div>
        <div id="jogosGerados">
            <!-- Os jogos gerados serão inseridos aqui via JavaScript -->
        </div>
    </div>
    <script src="./js/script.js"></script> <!-- Corrija o caminho do JavaScript se necessário -->
</body>
</html>
document.addEventListener("DOMContentLoaded", () => {
    const numerosTable = document.getElementById('numeros').getElementsByTagName('tr')[0];
    
    // Preenche a tabela com números de 01 a 60
    for (let i = 1; i <= 60; i++) {
        const td = document.createElement('td');
        td.textContent = i.toString().padStart(2, '0');
        td.style.fontFamily = 'Arial, sans-serif';
        td.style.fontSize = '14px';
        td.style.padding = '5px';
        td.style.border = '1px solid #ccc';
        td.style.textAlign = 'center';
        td.style.color = '#333';
        numerosTable.appendChild(td);
    }
});

function gerarJogos() {
    const excluirPares = document.getElementById('excluir-pares').value.split(',').map(num => Number(num.trim())).filter(num => !isNaN(num) && num % 2 === 0);
    const excluirImpares = document.getElementById('excluir-impares').value.split(',').map(num => Number(num.trim())).filter(num => !isNaN(num) && num % 2 !== 0);
    const fixar = Number(document.getElementById('fixar').value.trim());
    const dezenasAdicionais = Number(document.getElementById('dezenas-adicionais').value.trim());
    const quantidadeJogos = Number(document.getElementById('jogos').value.trim());
    const jogosGeradosDiv = document.getElementById('jogosGerados');
    jogosGeradosDiv.innerHTML = ''; // Limpa jogos anteriores

    // Validação básica
    if (excluirPares.length !== 10 || excluirImpares.length !== 10 || isNaN(fixar) || isNaN(quantidadeJogos) || !Number.isInteger(quantidadeJogos) || dezenasAdicionais < 7 || dezenasAdicionais > 20) {
        alert('Por favor, insira as dezenas corretamente e selecione uma quantidade de jogos válida.');
        return;
    }

    // Verifica se a dezena fixada está entre as dezenas excluídas
    if (excluirPares.includes(fixar) || excluirImpares.includes(fixar)) {
        alert('A dezena a ser fixada não pode estar entre as dezenas excluídas. Por favor, escolha outra.');
        return;
    }

    // Números disponíveis excluindo os selecionados pelo usuário
    let numeros = [];
    for (let i = 1; i <= 60; i++) {
        if (!excluirPares.includes(i) && !excluirImpares.includes(i)) {
            numeros.push(i);
        }
    }

    // Remove a dezena fixada dos números restantes
    numeros = numeros.filter(num => num !== fixar);

    if (numeros.length < (5 + dezenasAdicionais)) {
        alert('Não há números suficientes disponíveis para gerar jogos.');
        return;
    }

    // Define o limite máximo de jogos para evitar problemas de desempenho
    const limiteMaximoJogos = 1000;

    if (quantidadeJogos > limiteMaximoJogos) {
        alert(`A quantidade máxima de jogos é ${limiteMaximoJogos}. Por favor, ajuste a quantidade de jogos.`);
        return;
    }

    // Função para calcular o tamanho da fonte com base no número de jogos
    function getFontSize(numJogos) {
        if (numJogos <= 6) {
            return '16px'; // Tamanho padrão para até 6 jogos
        } else if (numJogos <= 20) {
            return '14px'; // Reduz um pouco o tamanho para até 20 jogos
        } else {
            return '12px'; // Reduz ainda mais para mais de 20 jogos
        }
    }

    // Calcula o tamanho da fonte com base no número de jogos
    const fontSize = getFontSize(quantidadeJogos);

    // Conjunto para verificar duplicidade
    const jogosUnicos = new Set();

    for (let j = 0; j < quantidadeJogos; j++) {
        let jogo = [fixar]; // Começa com a dezena fixada
        let numerosRestantes = [...numeros];

        // Seleciona as dezenas adicionais (opcional)
        let adicionaisSelecionados = [];
        for (let i = 0; i < dezenasAdicionais; i++) {
            const randomIndex = Math.floor(Math.random() * numerosRestantes.length);
            adicionaisSelecionados.push(numerosRestantes.splice(randomIndex, 1)[0]);
        }

        // Preenche com números restantes até ter a quantidade correta de dezenas
        while (jogo.length < 6 + dezenasAdicionais) {
            const randomIndex = Math.floor(Math.random() * numerosRestantes.length);
            jogo.push(numerosRestantes.splice(randomIndex, 1)[0]);
        }

        // Ordena as dezenas em ordem crescente
        jogo.sort((a, b) => a - b);

        // Verifica se o jogo já foi gerado
        const jogoStr = jogo.join(',');
        if (jogosUnicos.has(jogoStr)) {
            j--; // Tenta novamente
            continue;
        }

        // Adiciona o jogo ao conjunto de jogos únicos
        jogosUnicos.add(jogoStr);

        // Cria o elemento para exibir o jogo gerado
        const jogoElement = document.createElement('p');
        jogoElement.textContent = jogo.join(', ');
        jogoElement.style.fontSize = fontSize; // Define o tamanho da fonte
        jogoElement.style.fontFamily = 'Arial, sans-serif';
        jogoElement.style.color = '#333';
        jogosGeradosDiv.appendChild(jogoElement);
    }
}

function salvarJogo() {
    const jogosGeradosDiv = document.getElementById('jogosGerados');
    const jogos = jogosGeradosDiv.innerText.trim();

    if (!jogos) {
        alert('Nenhum jogo gerado para salvar.');
        return;
    }

    const blob = new Blob([jogos], { type: 'text/plain;charset=utf-8' });
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = 'jogos_megasena.txt';
    link.click();
}

function resetarJogo() {
    document.getElementById('excluir-pares').value = '';
    document.getElementById('excluir-impares').value = '';
    document.getElementById('fixar').value = '';
    document.getElementById('jogos').value = '';
    document.getElementById('dezenas-adicionais').value = '';
    document.getElementById('jogosGerados').innerHTML = '';
}

function exportarParaExcel() {
    const jogosGeradosDiv = document.getElementById('jogosGerados');
    const jogos = jogosGeradosDiv.innerText.trim();

    if (!jogos) {
        alert('Nenhum jogo gerado para exportar.');
        return;
    }

    const linhas = jogos.split('\n').map(linha => linha.split(', '));
    const ws = XLSX.utils.aoa_to_sheet(linhas);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, 'Jogos');
    XLSX.writeFile(wb, 'jogos_megasena.xlsx');
}
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Desdobramento Mega-Sena</title>
    <link rel="stylesheet" href="./css/styles.css"> <!-- Corrija o caminho do CSS se necessário -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
</head>
<body>
    <div class="container">
        <h1>Desdobramento Mega-Sena</h1>
        <h3>Números disponíveis (Desdobramento para 60 dezenas)</h3>
        <div class="table-container">
            <table id="numeros">
                <tr>
                    <!-- Os números serão inseridos aqui via JavaScript -->
                </tr>
            </table>
        </div>
        <div class="instructions">
            <p><strong>INSTRUÇÕES:</strong></p>
            <ol>
                <li>Exclua exatamente <strong>10 dezenas pares</strong> e <strong>10 dezenas ímpares</strong>.</li>
                <li>Escolha <strong>uma dezena</strong> para fixar.</li>
                <li>Selecione a <strong>quantidade de jogos</strong> que deseja gerar.</li>
                <li>Escolha de 7 a 20 dezenas adicionais (<span style="color: red;">opcional</span>).</li>
                <li>Salve o jogo (como *.txt) ou Exporte para o excel.</li>
            </ol>
        </div>
        <div class="number-selection">
            <label for="excluir-pares">Dezenas pares a excluir:</label>
            <input type="text" id="excluir-pares" placeholder="Ex: 02, 04, 10, ...">
        </div>
        <div class="number-selection">
            <label for="excluir-impares">Dezenas ímpares a excluir:</label>
            <input type="text" id="excluir-impares" placeholder="Ex: 01, 03, 11, ...">
        </div>
        <div class="number-selection">
            <label for="fixar">Dezena a fixar:</label>
            <input type="text" id="fixar" placeholder="Ex: 07">
        </div>
        <div class="number-selection">
            <label for="jogos">Quantidade de jogos:</label>
            <input type="number" id="jogos" min="1" max="100" placeholder="Ex: 5">
        </div>
        <div class="number-selection">
            <label for="dezenas-adicionais">Dezenas adicionais (7 a 20): (<span style="color: red;">opcional</span>)</label>
            <input type="number" id="dezenas-adicionais" min="7" max="20" placeholder="Ex: 10">
        </div>
        <div class="button-container">
            <button onclick="gerarJogos()">Gerar Jogos</button>
            <button onclick="salvarJogo()">Salvar Jogo</button>
            <button onclick="resetarJogo()">Resetar Jogo</button>
            <button onclick="exportarParaExcel()">Exportar para Excel</button>
        </div>
        <div class="userInformation">
            <p>Os jogos serão gerados com no mínimo 6 dezenas. Caso não haja adição de dezenas (<span style="color: red;">opcional</span>).</p>
            <p>Os jogos gerados são checados automaticamente afim de não haver duplicidade.</p>
            <p>O limite para a geração de jogos está setada para 1000.</p>
        </div>
        <div id="jogosGerados">
            <!-- Os jogos gerados serão inseridos aqui via JavaScript -->
        </div>
    </div>
    <script src="./js/script.js"></script> <!-- Corrija o caminho do JavaScript se necessário -->
</body>
</html>
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Desdobramento Mega-Sena</title>
    <link rel="stylesheet" href="./css/styles.css"> <!-- Corrija o caminho do CSS se necessário -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
</head>
<body>
    <div class="container">
        <h1>Desdobramento Mega-Sena</h1>
        <h3>Números disponíveis (Desdobramento para 60 dezenas)</h3>
        <div class="table-container">
            <table id="numeros">
                <tr>
                    <!-- Os números serão inseridos aqui via JavaScript -->
                </tr>
            </table>
        </div>
        <div class="instructions">
            <p><strong>INSTRUÇÕES:</strong></p>
            <ol>
                <li>Exclua exatamente <strong>10 dezenas pares</strong> e <strong>10 dezenas ímpares</strong>.</li>
                <li>Escolha <strong>uma dezena</strong> para fixar.</li>
                <li>Selecione a <strong>quantidade de jogos</strong> que deseja gerar.</li>
                <li>Escolha de 7 a 20 dezenas adicionais (<span style="color: red;">opcional</span>).</li>
                <li>Salve o jogo (como *.txt) ou Exporte para o excel.</li>
            </ol>
        </div>
        <div class="number-selection">
            <label for="excluir-pares">Dezenas pares a excluir:</label>
            <input type="text" id="excluir-pares" placeholder="Ex: 02, 04, 10, ...">
        </div>
        <div class="number-selection">
            <label for="excluir-impares">Dezenas ímpares a excluir:</label>
            <input type="text" id="excluir-impares" placeholder="Ex: 01, 03, 11, ...">
        </div>
        <div class="number-selection">
            <label for="fixar">Dezena a fixar:</label>
            <input type="text" id="fixar" placeholder="Ex: 07">
        </div>
        <div class="number-selection">
            <label for="jogos">Quantidade de jogos:</label>
            <input type="number" id="jogos" min="1" max="100" placeholder="Ex: 5">
        </div>
        <div class="number-selection">
            <label for="dezenas-adicionais">Dezenas adicionais (7 a 20): (<span style="color: red;">opcional</span>)</label>
            <input type="number" id="dezenas-adicionais" min="7" max="20" placeholder="Ex: 10">
        </div>
        <div class="button-container">
            <button onclick="gerarJogos()">Gerar Jogos</button>
            <button onclick="salvarJogo()">Salvar Jogo</button>
            <button onclick="resetarJogo()">Resetar Jogo</button>
            <button onclick="exportarParaExcel()">Exportar para Excel</button>
        </div>
        <div class="userInformation">
            <p>Os jogos serão gerados com no mínimo 6 dezenas. Caso não haja adição de dezenas (<span style="color: red;">opcional</span>).</p>
            <p>Os jogos gerados são checados automaticamente afim de não haver duplicidade.</p>
            <p>O limite para a geração de jogos está setada para 1000.</p>
        </div>
        <div id="jogosGerados">
            <!-- Os jogos gerados serão inseridos aqui via JavaScript -->
        </div>
    </div>
    <script src="./js/script.js"></script> <!-- Corrija o caminho do JavaScript se necessário -->
</body>
</html>
document.addEventListener("DOMContentLoaded", () => {
    const numerosTable = document.getElementById('numeros').getElementsByTagName('tr')[0];
    
    // Preenche a tabela com números de 01 a 60
    for (let i = 1; i <= 60; i++) {
        const td = document.createElement('td');
        td.textContent = i.toString().padStart(2, '0');
        td.style.fontFamily = 'Arial, sans-serif';
        td.style.fontSize = '14px';
        td.style.padding = '5px';
        td.style.border = '1px solid #ccc';
        td.style.textAlign = 'center';
        td.style.color = '#333';
        numerosTable.appendChild(td);
    }
});

function gerarJogos() {
    const excluirPares = document.getElementById('excluir-pares').value.split(',').map(num => Number(num.trim())).filter(num => !isNaN(num) && num % 2 === 0);
    const excluirImpares = document.getElementById('excluir-impares').value.split(',').map(num => Number(num.trim())).filter(num => !isNaN(num) && num % 2 !== 0);
    const fixar = Number(document.getElementById('fixar').value.trim());
    const dezenasAdicionais = Number(document.getElementById('dezenas-adicionais').value.trim());
    const quantidadeJogos = Number(document.getElementById('jogos').value.trim());
    const jogosGeradosDiv = document.getElementById('jogosGerados');
    jogosGeradosDiv.innerHTML = ''; // Limpa jogos anteriores

    // Validação básica
    if (excluirPares.length !== 10 || excluirImpares.length !== 10 || isNaN(fixar) || isNaN(quantidadeJogos) || !Number.isInteger(quantidadeJogos) || dezenasAdicionais < 7 || dezenasAdicionais > 20) {
        alert('Por favor, insira as dezenas corretamente e selecione uma quantidade de jogos válida.');
        return;
    }

    // Verifica se a dezena fixada está entre as dezenas excluídas
    if (excluirPares.includes(fixar) || excluirImpares.includes(fixar)) {
        alert('A dezena a ser fixada não pode estar entre as dezenas excluídas. Por favor, escolha outra.');
        return;
    }

    // Números disponíveis excluindo os selecionados pelo usuário
    let numeros = [];
    for (let i = 1; i <= 60; i++) {
        if (!excluirPares.includes(i) && !excluirImpares.includes(i)) {
            numeros.push(i);
        }
    }

    // Remove a dezena fixada dos números restantes
    numeros = numeros.filter(num => num !== fixar);

    if (numeros.length < (5 + dezenasAdicionais)) {
        alert('Não há números suficientes disponíveis para gerar jogos.');
        return;
    }

    // Define o limite máximo de jogos para evitar problemas de desempenho
    const limiteMaximoJogos = 1000;

    if (quantidadeJogos > limiteMaximoJogos) {
        alert(`A quantidade máxima de jogos é ${limiteMaximoJogos}. Por favor, ajuste a quantidade de jogos.`);
        return;
    }

    // Função para calcular o tamanho da fonte com base no número de jogos
    function getFontSize(numJogos) {
        if (numJogos <= 15) {
            return '16px'; // Tamanho padrão para até 15 jogos
        } else if (numJogos <= 20) {
            return '14px'; // Reduz um pouco o tamanho para até 20 jogos
        } else {
            return '12px'; // Reduz ainda mais para mais de 20 jogos
        }
    }

    // Calcula o tamanho da fonte com base no número de jogos
    const fontSize = getFontSize(quantidadeJogos);

    // Conjunto para verificar duplicidade
    const jogosUnicos = new Set();

    for (let j = 0; j < quantidadeJogos; j++) {
        let jogo = [fixar]; // Começa com a dezena fixada
        let numerosRestantes = [...numeros];

        // Seleciona as dezenas adicionais (opcional)
        let adicionaisSelecionados = [];
        for (let i = 0; i < dezenasAdicionais; i++) {
            const randomIndex = Math.floor(Math.random() * numerosRestantes.length);
            adicionaisSelecionados.push(numerosRestantes.splice(randomIndex, 1)[0]);
        }

        // Preenche com números restantes até ter a quantidade correta de dezenas
        while (jogo.length < 6 + dezenasAdicionais) {
            const randomIndex = Math.floor(Math.random() * numerosRestantes.length);
            jogo.push(numerosRestantes.splice(randomIndex, 1)[0]);
        }

        // Ordena as dezenas em ordem crescente
        jogo.sort((a, b) => a - b);

        // Verifica duplicidade
        const jogoString = jogo.join(',');
        if (!jogosUnicos.has(jogoString)) {
            jogosUnicos.add(jogoString);
            const p = document.createElement('p');
            p.textContent = jogo.join(', ');
            p.style.fontSize = fontSize; // Aplica o tamanho da fonte calculado
            jogosGeradosDiv.appendChild(p);
        } else {
            j--; // Tenta gerar outro jogo se houver duplicidade
        }
    }
}

function salvarJogo() {
    const jogos = document.getElementById('jogosGerados').innerText;
    const blob = new Blob([jogos], { type: 'text/plain;charset=utf-8' });
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = 'jogos_mega_sena.txt';
    link.click();
}

function resetarJogo() {
    document.getElementById('excluir-pares').value = '';
    document.getElementById('excluir-impares').value = '';
    document.getElementById('fixar').value = '';
    document.getElementById('jogos').value = '';
    document.getElementById('dezenas-adicionais').value = '';
    document.getElementById('jogosGerados').innerHTML = '';
}

function exportarParaExcel() {
    const jogos = Array.from(document.getElementById('jogosGerados').getElementsByTagName('p')).map(p => p.textContent);
    const ws_data = jogos.map(jogo => jogo.split(', '));
    const ws = XLSX.utils.aoa_to_sheet(ws_data);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, "Jogos");
    XLSX.writeFile(wb, "jogos_mega_sena.xlsx");
}
/* Arquivo CSS */
body {
    font-family: 'Arial', sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    overflow-y: auto;
}

.container {
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    max-width: 800px;
    width: 100%;
    margin: 20px;
    box-sizing: border-box;
}

h1, h3 {
    text-align: center;
}

.table-container {
    overflow-x: auto;
    margin-bottom: 20px;
}

#numeros {
    width: 100%;
    border-collapse: collapse;
    margin: 0 auto;
}

#numeros td {
    padding: 10px;
    border: 1px solid #ccc;
    text-align: center;
    color: #333;
    cursor: pointer;
    transition: background-color 0.3s;
}

#numeros td:hover {
    background-color: #e0e0e0;
}

.instructions {
    margin-bottom: 20px;
    font-size: 14px;
}

.number-selection {
    display: flex;
    flex-direction: column;
    margin-bottom: 10px;
}

.number-selection label {
    margin-bottom: 5px;
    font-weight: bold;
}

.number-selection input {
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.button-container {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
}

button {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    background-color: #007bff;
    color: white;
    font-size: 14px;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #0056b3;
}

.userInformation {
    font-size: 14px;
    margin-bottom: 20px;
}

#jogosGerados {
    font-size: 14px;
    line-height: 1.6;
    word-wrap: break-word;
}
